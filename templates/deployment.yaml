apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "consoleme.fullname" . }}
  labels:
    {{- include "consoleme.labels" . | nindent 4 }}
    app: {{ include "consoleme.fullname" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "consoleme.selectorLabels" . | nindent 6 }}
      app: {{ include "consoleme.fullname" . }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum}}
      labels:
        {{- include "consoleme.selectorLabels" . | nindent 8 }}
        app: {{ include "consoleme.fullname" . }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "consoleme.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          env:
          - name: CONFIG_LOCATION
            value: /apps/consoleme/configs/oidc_all_in_one.yaml
          {{- if ne .Values.iamRole "" }}
          - name: AWS_SHARED_CREDENTIALS_FILE
            value: /meta/aws-iam/credentials.process
          - name: AWS_CREDENTIAL_PROFILES_FILE
            value: /meta/aws-iam/credentials  
          {{- end }}
          - name: EC2_REGION
            value: {{ .Values.consolemeConfig.region }}
          volumeMounts:
          - name: config-volume
            mountPath: /apps/consoleme/configs
          - name: secret-volume
            mountPath: /apps/consoleme/secrets
          {{- if ne .Values.iamRole "" }}
          - mountPath: /meta/aws-iam
            name: aws-iam-credentials
            readOnly: true
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          # command: ["bash", "-c"]
          # args: ["sleep 6000"]
          ports:
            - name: http
              containerPort: 8081
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
      - name: config-volume
        configMap:
          name: {{ include "consoleme.fullname" . }}
      - name: secret-volume
        secret:
          secretName: "{{ include "consoleme.fullname" . }}-secret"
          defaultMode: 0755
      {{- if ne .Values.iamRole "" }}
      - name: aws-iam-credentials
        secret:
          defaultMode: 420
          secretName: consoleme
      {{- end }}